import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import {jwtDecode} from 'jwt-decode';

@Injectable({
  providedIn: 'root'
})
export class AuthGuard implements CanActivate {

  constructor(private router: Router) {}

  canActivate(): boolean {
    const token = localStorage.getItem('access_token'); // ‚úÖ ƒë√∫ng key

    if (!token) {
      console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y token, ch·∫∑n truy c·∫≠p');
      this.router.navigate(['/login']);
      return false;
    }

    try {
      const decoded: any = jwtDecode(token);
      console.log('üîé Token gi·∫£i m√£:', decoded);

      // Ki·ªÉm tra h·∫°n s·ª≠ d·ª•ng
      if (decoded.exp && decoded.exp * 1000 < Date.now()) {
        console.warn('‚ö†Ô∏è Token ƒë√£ h·∫øt h·∫°n');
        localStorage.removeItem('access_token');
        localStorage.removeItem('refresh_token');
        this.router.navigate(['/login']);
        return false;
      }

      // ‚úÖ Token c√≤n h·∫°n ‚Üí cho ph√©p
      return true;

    } catch (err) {
      console.error('‚ùå L·ªói khi decode token:', err);
      localStorage.removeItem('access_token');
      localStorage.removeItem('refresh_token');
      this.router.navigate(['/login']);
      return false;
    }
  }
}
