import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-content',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './content.component.html',
  styleUrls: ['./content.component.css']
})
export class ContentComponent implements OnInit {
  account: any = {
    tenDangNhap: '',
    hoTen: '',
    ngaySinh: '',
    diaChi: '',
    email: '',
    soDT: ''
  };

  oldPassword: string = '';
  newPassword: string = '';
  message: string = '';

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.loadAccount();
  }

  loadAccount() {
    const token = localStorage.getItem('access_token');
    if (!token) return;

    this.http.get('/api/account/me', {
      headers: { Authorization: `Bearer ${token}` }
    }).subscribe({
      next: (res: any) => {
        this.account = res;
      },
      error: err => {
        console.error('‚ùå L·ªói t·∫£i th√¥ng tin t√†i kho·∫£n:', err);
      }
    });
  }

  onUpdate() {
    // ‚úÖ N·∫øu ch·ªâ nh·∫≠p 1 trong 2 √¥ m·∫≠t kh·∫©u
    if ((this.oldPassword && !this.newPassword) || (!this.oldPassword && this.newPassword)) {
      this.message = "Vui l√≤ng nh·∫≠p c·∫£ m·∫≠t kh·∫©u c≈© v√† m·∫≠t kh·∫©u m·ªõi.";
      return;
    }

    const body: any = {
      tenDangNhap: this.account.tenDangNhap,
      hoTen: this.account.hoTen,
      ngaySinh: this.account.ngaySinh,
      diaChi: this.account.diaChi,
      email: this.account.email,
      soDT: this.account.soDT
    };

    // ‚úÖ N·∫øu c√≥ nh·∫≠p c·∫£ 2 m·∫≠t kh·∫©u
    if (this.oldPassword && this.newPassword) {
      body.matKhauCu = this.oldPassword;
      body.matKhauMoi = this.newPassword;
    }

    this.http.put('/api/account/update', body).subscribe({
      next: (res: any) => {
        this.message = res.message || "C·∫≠p nh·∫≠t th√†nh c√¥ng";
        this.oldPassword = '';
        this.newPassword = '';
        this.loadAccount(); // reload l·∫°i d·ªØ li·ªáu sau khi c·∫≠p nh·∫≠t
      },
      error: (err) => {
        this.message = err.error.message || "C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t";
      }
    });
  }

  onDeactivate() {
    if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën v√¥ hi·ªáu h√≥a t√†i kho·∫£n?')) return;

    this.http.delete('/api/account/deactivate', {
      headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }
    }).subscribe({
      next: () => {
        alert('üö´ T√†i kho·∫£n ƒë√£ b·ªã v√¥ hi·ªáu h√≥a');
        localStorage.removeItem('access_token');
        localStorage.removeItem('refresh_token');
        window.location.href = '/login';
      },
      error: err => {
        console.error('‚ùå L·ªói v√¥ hi·ªáu h√≥a t√†i kho·∫£n:', err);
      }
    });
  }
}
